class Matriz:
    # Método para calcular el módulo cuadrado de cada número complejo en la matriz
    def modulo_cuadrado(self, matriz):
        for i in range(len(matriz)):
            matriz[i][0] = (matriz[i][0].real ** 2 + matriz[i][0].imag ** 2)
        return matriz

# Definición de la matriz n con números complejos
n = [[(1+1j)], [(1+1j)], [(1+1j)], [(1+1j)], [(1+1j)], [(1+1j)], [(1+1j)], [(1+1j)],
     [(1+1j)], [(1+1j)], [(1+1j)], [(1+1j)], [(1+1j)], [(1+1j)], [(1+1j)], [(1+1j)]]

# Creación de una instancia de la clase Matriz
matriz = Matriz()
# Cálculo del módulo cuadrado de cada número complejo en la matriz n
n = matriz.modulo_cuadrado(n)

# Cálculo de la probabilidad de encontrar una partícula en la posición x1
x_position = n[1][0]
total_sum = sum(x[0] for x in n)
probability_x1 = x_position / total_sum

print("Probabilidad de encontrar una partícula en la posición x1:", probability_x1)
